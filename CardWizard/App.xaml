<Application x:Class="CardWizard.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:CardWizard"
             xmlns:cview="clr-namespace:CardWizard.View"
             xmlns:System="clr-namespace:System;assembly=System.Runtime"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <SolidColorBrush x:Key="MenuBackground" Color="#FF35609C"/>
        <SolidColorBrush x:Key="ButtonForeground" Color="White"/>
        <SolidColorBrush x:Key="PlaceholderForeground" Color="Gray"/>
        <SolidColorBrush x:Key="TextForeground" Color="Black"/>
        <SolidColorBrush x:Key="ButtonBackground" Color="#FF69A6E4"/>
        <SolidColorBrush x:Key="ValidForeground" Color="#FF00FF51"/>
        <SolidColorBrush x:Key="InvalidForeground" Color="#FFFF3030"/>
        <SolidColorBrush x:Key="TraitBorderBrush" Color="#FF3C6185"/>
        <SolidColorBrush x:Key="SkillBorderBrush" Color="slategray"/>
        <System:String x:Key="AgeBonusMark">⚠</System:String>
        <!--提示信息窗口的显示样式-->
        <Style x:Key="XToolTip" TargetType="ToolTip">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Background" Value="WhiteSmoke"/>
            <Setter Property="Opacity" Value="0.75"/>
        </Style>
        <!-- 定义Label 的样式-->
        <Style x:Key="XLabel" TargetType="Label">
            <Setter Property="Margin" Value="2,2,2,2"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="Cursor" Value="Arrow"/>
        </Style>
        <Style x:Key="ComboGenceral" TargetType="ComboBox">
            <Setter Property="Background" Value="WhiteSmoke"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{DynamicResource MenuBackground}"/>
        </Style>
        <!-- 定义 Button 的样式 -->
        <Style x:Key="XButtonStyle" TargetType="Button">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="#43a9c7"/>
            <Setter Property="Cursor" Value="Hand"></Setter>
            <Setter Property="ToolTip">
                <Setter.Value>
                    <ToolTip Style="{DynamicResource XToolTip}"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <TextBlock Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#2f96b4"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#2a89a4"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--定义 TextBlock 的样式-->
        <Style x:Key="GeneralTextBlock" TargetType="TextBlock">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
            <Setter Property="TextAlignment" Value="Center"/>
        </Style>
        <!-- 定义 TextBox 的 Placeholder 样式 -->
        <Style x:Key="TextField" TargetType="TextBox">
            <Style.Resources>
                <!-- 定义 TextBox 的 Placeholder 样式 -->
                <VisualBrush x:Key="HintText" TileMode="None" Opacity="0.5" Stretch="None" AlignmentX="Left">
                    <VisualBrush.Visual>
                        <TextBlock FontStyle="Italic" Text="Enter your data" Foreground="{DynamicResource PlaceholderForeground}"/>
                    </VisualBrush.Visual>
                </VisualBrush>
            </Style.Resources>
            
            <Style.Triggers>
                <Trigger Property="Text" Value="{x:Null}">
                    <Setter Property="Background" Value="{DynamicResource HintText}"/>
                </Trigger>
                <Trigger Property="Text" Value="">
                    <Setter Property="Background" Value="{DynamicResource HintText}"/>
                </Trigger>
            </Style.Triggers>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Cursor" Value="IBeam"/>
            <Setter Property="MaxLines" Value="1"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="Margin" Value="2,2,2,2"/>
            <!--<Setter Property="MaxLength" Value="10"/>-->
            <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
        </Style>
        <!-- 定义 RadioButton 的 Placeholder 样式 -->
        <Style x:Key="RadioGroup" TargetType="RadioButton">
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="Foreground" Value="{StaticResource PlaceholderForeground}"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource TextForeground}"/>
                </Trigger>
            </Style.Triggers>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
        </Style>
        <!--属性显示盒的样式-->
        <Style x:Key="TraitBoxStyle" TargetType="cview:TraitBox">
            <Setter Property="Margin" Value="0,0,0,0"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Width" Value="144"/>
            <Setter Property="Height" Value="54"/>
        </Style>
        <!--默认字体-->
        <FontFamily x:Key="WindowFontFamily">Hack</FontFamily>
        <!--默认的 Margin-->
        <Thickness x:Key="DefaultMargin">2,2,2,2</Thickness>
        <!--合法性检查标签的样式-->
        <Style x:Key="ValidityCheck" TargetType="Label">
            <Setter Property="FontWeight" Value="ExtraBold"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Padding" Value="5,0,5,0"/>
            <Setter Property="Foreground" Value="WhiteSmoke"/>
        </Style>
    </Application.Resources>
</Application>
